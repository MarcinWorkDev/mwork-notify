openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "MWork Notify!"
tags:
  - name: "account"
    description: "Account settings"
  - name: "notification"
    description: "Notifications"
  - name: "template"
    description: "Notification templates"
paths:
  /notification:
    parameters:
      - $ref: '#/components/parameters/headerMessageId'
      - $ref: '#/components/parameters/headerTimestamp'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
    get:
      tags:
        - "notification"
      summary: "Get notifications"
      responses:
        200:
          description: "Notifications"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notifications'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
  /notification/{id}:
    parameters:
      - $ref: '#/components/parameters/headerMessageId'
      - $ref: '#/components/parameters/headerTimestamp'
      - $ref: '#/components/parameters/headerIfNoneMatch'
      - in: path
        name: id
        required: true
        description: "Notification ID"
        schema:
          type: string
    get:
      tags:
        - "notification"
      summary: "Get notification by notification id"
      responses:
        200:
          description: "Notification"
          headers:
            ETag:
              $ref: '#/components/parameters/headerEtag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        304:
          $ref: '#/components/responses/304'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    patch:
      tags:
        - "notification"
      summary: "Update existing notification"
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiError'
      responses:
        201:
          $ref: '#/components/responses/400'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    delete:
      tags:
        - "notification"
      summary: "Update existing notification"
      responses:
        201:
          $ref: '#/components/responses/400'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: x-api-key
  parameters:
    headerMessageId:
      in: header
      required: true
      name: x-message-id
      schema:
        type: string
    headerTimestamp:
      in: header
      required: true
      name: x-timestamp
      schema:
        type: string
    headerEtag:
      in: header
      required: true
      name: etag
      schema:
        type: string
    headerIfNoneMatch:
      in: header
      required: true
      name: if-none-match
      schema:
        type: string
    cursor:
      in: query
      required: false
      name: cursor
      schema:
        type: string
    limit:
      in: query
      required: false
      name: limit
      schema:
        type: string
  schemas:
    ApiError:
      type: "object"
      properties:
        source:
          type: "string"
          description: "error source eg. module name"
        code:
          type: "string"
          description: "error code"
        message:
          type: "string"
          description: "error message"
      required:
        - source
        - code
        - message
    Notification:
      type: object
      properties:
        id:
          description: "Notification id"
          type: string
    Notifications:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        cursor_next:
          type: string
        cursor_prev:
          type: string
  responses:
    201:
      description: "Accepted"
    304:
      description: "NotModified"
    400:
      description: "BadRequest"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    401:
      description: "401"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    403:
      description: "403"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    404:
      description: "404"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    500:
      description: "500"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'